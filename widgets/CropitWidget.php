<?phpnamespace kujiorpamm\cropit\widgets;use yii\base\InvalidConfigException;use yii\helpers\Html;use yii\helpers\Json;use yii\web\JsExpression;use yii\web\View;use yii\widgets\InputWidget;use kujiorpamm\cropit\asset\CropitAsset;class CropitWidget extends InputWidget {		const PLUGIN_NAME = 'CropWidget';		public $clientOptions = [];	public $options = ['class' => 'form-control myclass'];	public $type = 'hidden';	public $pluginOptions = [];		private $container_id;		public function init()    {        parent::init();                $this->container_id = "cropit_" . rand();                if (empty($this->pluginOptions)) {            throw new InvalidConfigException("Define plugin options CROPIT");        }    }        public function run()    {                $this->options['value'] = $this->options['id'];                if ($this->hasModel()) {            echo Html::activeInput($this->type, $this->model, $this->attribute, $this->options);        } else {            //echo Html::input($this->type, $this->name, $this->value, $this->options);        }                echo "        	        	<div id='". $this->container_id . "'>			  <div class='cropit-preview'></div>			  			  <input type='range' class='cropit-image-zoom-input' />			  			  <input type='file' class='cropit-image-input' />			  			</div>        ";                $this->registerScripts();            }        public function registerScripts() {				$view = $this->getView();        CropitAsset::register($view);                $js = [];        $js2 = [];                if ($this->pluginOptions !== false) {            $options = empty($this->pluginOptions) ? '' : Json::htmlEncode($this->pluginOptions);        }                $js[] = " jQuery('#{$this->container_id}').cropit({$options}); ";                if($this->model[$this->attribute]) {			$js[] = " jQuery('#{$this->container_id}').cropit('imageSrc', '".$this->model[$this->attribute]."'); ";		}                $view->registerJs(implode("\n", $js));                        $view->registerJs("                	jQuery('#".$this->field->form->id."').submit(function(e){        		        		$('#".$this->options['id']."').val($('#{$this->container_id}').cropit('export'));        			        	});                ", View::POS_READY);			}		public static function saveAs($base64, $filename="") {				$img = str_replace('data:image/png;base64,', '', $base64);		$img = str_replace(' ', '+', $img);		$image = base64_decode($img);				return file_put_contents($filename, $image);	}	}	?>